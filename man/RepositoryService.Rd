% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RepositoryService.R
\name{RepositoryService}
\alias{RepositoryService}
\title{RepositoryService}
\description{
Provides access to PetroVisor item related functionalities.
}
\details{
A new instance of this class will be created by the ServiceProvider
automatically.
}
\examples{
\dontrun{
# create a new instance of the service provider
sp <- ServiceProvider$new("Host", 8095, "WorkspaceA", "UserX", "Password")

# get the names of all available entities
entityNames <- sp$items$load_names("Entity")

# delete an item (delete the hierarchy with the name "test")
sp$items$delete("Hierarchy", "test")

# get an item by name
well01 <- sp$items$load("Well", "Well01")

# add or edit an item
entity <- Entity$new(
  name = "TestWell01",
  entityTypeName = "Well",
  alias = "TestAlias01"
)
sp$items$save("Entity", entity)
}
}
\section{Super class}{
\code{\link[Myrconn.PetroVisor.Client:ApiRequests]{Myrconn.PetroVisor.Client::ApiRequests}} -> \code{RepositoryService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-RepositoryService-new}{\code{RepositoryService$new()}}
\item \href{#method-RepositoryService-load_names}{\code{RepositoryService$load_names()}}
\item \href{#method-RepositoryService-delete}{\code{RepositoryService$delete()}}
\item \href{#method-RepositoryService-load}{\code{RepositoryService$load()}}
\item \href{#method-RepositoryService-save}{\code{RepositoryService$save()}}
\item \href{#method-RepositoryService-clone}{\code{RepositoryService$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-new"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-new}{}}}
\subsection{Method \code{new()}}{
Create a new RepositoryService instance. This is done by the
ServiceProvider automatically.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$new(url, token_type, token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{the URL for the API calls.}

\item{\code{token_type}}{the type of the issued token.}

\item{\code{token}}{the issued token.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-load_names"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-load_names}{}}}
\subsection{Method \code{load_names()}}{
Get the names of all items of the given type available in
PetroVisor.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$load_names(type)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The type of the item.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character array containing the names of the items.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-delete"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-delete}{}}}
\subsection{Method \code{delete()}}{
Delete an item by name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$delete(type, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The type of the item.}

\item{\code{name}}{Name of the item to delete.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-load"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-load}{}}}
\subsection{Method \code{load()}}{
Get an item by name.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$load(type, name)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The type of the item.}

\item{\code{name}}{Name of the item to retrieve.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An object of the specified type class.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-save"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-save}{}}}
\subsection{Method \code{save()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$save(type, item)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{type}}{The type of the item.}

\item{\code{item}}{Item to add or edit. Has to be an object of the respective
class.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Add or edit an item.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-RepositoryService-clone"></a>}}
\if{latex}{\out{\hypertarget{method-RepositoryService-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepositoryService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
