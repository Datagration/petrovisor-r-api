% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Workflow.R
\name{WorkflowSchedule}
\alias{WorkflowSchedule}
\title{WorkflowSchedule}
\description{
Class representing a PetroVisor workflow schedule object.
}
\examples{
\dontrun{
WorkflowSchedule$new()
}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{The name of the item.}

\item{\code{modified}}{The date the workflow schedule was modified (string).}

\item{\code{scheduleName}}{The name of the workflow schedule.}

\item{\code{workflowName}}{The name of the workflow associated with the schedule.}

\item{\code{workspaceName}}{The workspace in which the schedule is saved.}

\item{\code{active}}{This flag specifies whether the schedule is active.}

\item{\code{processingEntitySetName}}{The name of the processing entity set.}

\item{\code{processingScopeName}}{The name of the processing scope.}

\item{\code{processingContextNames}}{A list of strings holding the names of the
processing contexts.}

\item{\code{absoluteDate}}{The date at which the schedule will be executed (string).}

\item{\code{executedWorkflowName}}{The name of the executed workflow.}

\item{\code{executedWorkflowScheduleName}}{The name of the executed workflow
schedule.}

\item{\code{scheduleStart}}{The start date of the schedule (string).}

\item{\code{scheduleEnd}}{The end of the schedule. Must be an object of the class
\code{ScheduleEnd}.}

\item{\code{scheduleRecurrence}}{Settings defining the schedule's recurrence.
Must be an object of type \code{ScheduleRecurrence}.}

\item{\code{isLocked}}{This flag specifies whether the schedule is locked.
Defaults to \code{FALSE}.}

\item{\code{user}}{The user the schedule belongs to.}

\item{\code{isFavorite}}{This flag specifies whether the schedule is marked as
favorite item, and thus shown in the favorites tab on the home module in
PetroVisor. Defaults to \code{FALSE}.}

\item{\code{labels}}{A list of strings holding the labels of the schedule.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-WorkflowSchedule-new}{\code{WorkflowSchedule$new()}}
\item \href{#method-WorkflowSchedule-toList}{\code{WorkflowSchedule$toList()}}
\item \href{#method-WorkflowSchedule-clone}{\code{WorkflowSchedule$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WorkflowSchedule-new"></a>}}
\if{latex}{\out{\hypertarget{method-WorkflowSchedule-new}{}}}
\subsection{Method \code{new()}}{
Create a new Workflow schedule instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowSchedule$new(
  name = NULL,
  modified = NULL,
  scheduleName = NULL,
  workflowName = NULL,
  workspaceName = NULL,
  active = NULL,
  processingEntitySetName = NULL,
  processingScopeName = NULL,
  processingContextNames = NULL,
  absoluteDate = NULL,
  executedWorkflowName = NULL,
  executedWorkflowScheduleName = NULL,
  scheduleStart = NULL,
  scheduleEnd = NULL,
  scheduleRecurrence = NULL,
  isLocked = FALSE,
  user = NULL,
  isFavorite = FALSE,
  labels = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{The name of the item.}

\item{\code{modified}}{The date the workflow schedule was modified (string).}

\item{\code{scheduleName}}{The name of the workflow schedule.}

\item{\code{workflowName}}{The name of the workflow associated with the schedule.}

\item{\code{workspaceName}}{The workspace in which the schedule is saved.}

\item{\code{active}}{This flag specifies whether the schedule is active.}

\item{\code{processingEntitySetName}}{The name of the processing entity set.}

\item{\code{processingScopeName}}{The name of the processing scope.}

\item{\code{processingContextNames}}{A list of strings holding the names of the
processing contexts.}

\item{\code{absoluteDate}}{The date at which the schedule will be executed (string).}

\item{\code{executedWorkflowName}}{The name of the executed workflow.}

\item{\code{executedWorkflowScheduleName}}{The name of the executed workflow
schedule.}

\item{\code{scheduleStart}}{The start date of the schedule (string).}

\item{\code{scheduleEnd}}{The end of the schedule. Must be an object of the class
\code{ScheduleEnd}.}

\item{\code{scheduleRecurrence}}{Settings defining the schedule's recurrence.
Must be an object of type \code{ScheduleRecurrence}.}

\item{\code{isLocked}}{This flag specifies whether the schedule is locked.
Defaults to \code{FALSE}.}

\item{\code{user}}{The user the schedule belongs to.}

\item{\code{isFavorite}}{This flag specifies whether the schedule is marked as
favorite item, and thus shown in the favorites tab on the home module in
PetroVisor. Defaults to \code{FALSE}.}

\item{\code{labels}}{A list of strings holding the labels of the schedule.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WorkflowSchedule-toList"></a>}}
\if{latex}{\out{\hypertarget{method-WorkflowSchedule-toList}{}}}
\subsection{Method \code{toList()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowSchedule$toList()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Convert the object to a list. This function is mainly used
by the RepositoryService to convert the objects to lists and then
call the web API.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-WorkflowSchedule-clone"></a>}}
\if{latex}{\out{\hypertarget{method-WorkflowSchedule-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{WorkflowSchedule$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
