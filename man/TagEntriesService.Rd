% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TagEntriesService.R
\name{TagEntriesService}
\alias{TagEntriesService}
\title{TagEntriesService}
\description{
Provides access to functionality related to tag entries provided
through the web API.
}
\details{
A new instance of this class will be created by the ServiceProvider
automatically.
}
\examples{
\dontrun{
# create a new instance of the service provider
sp <- ServiceProvider$new("Host", 8095, "WorkspaceA", "UserX", "Password")

# get tag entries of group "Info"
tagEntries <- sp$tag_entries$GetTagEntries(
  TagEntriesFilter$new(TagGroup = "Info")
)

# delete tag entries
sp$tag_entries$DeleteTagEntry(
  entityName = "Well01",
  tagName = "Active",
  start = "2020-01-01T00:00:00.000Z"
)
}

## ------------------------------------------------
## Method `TagEntriesService$load`
## ------------------------------------------------

\dontrun{
tagEntries <- sp$tag_entries$load(tag_group_names = c("Info"))
}
}
\section{Super class}{
\code{\link[Myrconn.PetroVisor.Client:ApiRequests]{Myrconn.PetroVisor.Client::ApiRequests}} -> \code{TagEntriesService}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TagEntriesService-new}{\code{TagEntriesService$new()}}
\item \href{#method-TagEntriesService-save}{\code{TagEntriesService$save()}}
\item \href{#method-TagEntriesService-delete_range}{\code{TagEntriesService$delete_range()}}
\item \href{#method-TagEntriesService-delete}{\code{TagEntriesService$delete()}}
\item \href{#method-TagEntriesService-load}{\code{TagEntriesService$load()}}
\item \href{#method-TagEntriesService-clone}{\code{TagEntriesService$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-new"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-new}{}}}
\subsection{Method \code{new()}}{
Create a new TagEntriesService instance. This is done by the
ServiceProvider automatically.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$new(url, token_type, token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{the URL for the API calls.}

\item{\code{token_type}}{the type of the issued token.}

\item{\code{token}}{the issued token.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-save"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-save}{}}}
\subsection{Method \code{save()}}{
Add new or update single or multiple tag entries at once.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$save(tag_entries)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tag_entries}}{A dataframe specifying the tag entries to save or
update. The dataframe has to have for columns with the names
\code{tag_name}, \code{entity_name}, \code{start}, \code{end}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-delete_range"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-delete_range}{}}}
\subsection{Method \code{delete_range()}}{
Delete all tag entries with a start date in the specified
time range.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$delete_range(entity_name, tag_name, start, end = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_name}}{The name of the entity for which to delete the tag
entries.}

\item{\code{tag_name}}{The name of the tag for which to delete the tag entries.}

\item{\code{start}}{The start date of the range.}

\item{\code{end}}{(Optional) The end date of the range.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-delete"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-delete}{}}}
\subsection{Method \code{delete()}}{
Delete the specified tag entries.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$delete(tag_entries)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tag_entries}}{A dataframe specifying the tag entries to delete. The
dataframe has to have for columns with the names \code{tag_name},
\code{entity_name}, \code{start}, \code{end}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-load"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-load}{}}}
\subsection{Method \code{load()}}{
Get tag entries according to the given filter.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$load(
  entity_names = list(),
  entity_set_name = "",
  tag_names = list(),
  tag_group_names = list(),
  start = NULL,
  end = NULL,
  start_date_begins = NULL,
  start_date_ends = NULL,
  end_date_begins = NULL,
  end_date_ends = NULL,
  is_end_date_set = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entity_names}}{Names of the entities for which tag entries shall be
retrieved. Has to be specified if \code{entity_set_name} is not used.}

\item{\code{entity_set_name}}{Name of the entity set defining the entities for
which tag entries shall be retrieved. Has to be specified if
\code{entity_names} is not used.}

\item{\code{tag_names}}{Tags for which tag entries shall be retrieved. Has to be
specified if \code{tag_group_names} is not used.}

\item{\code{tag_group_names}}{Tag groups for which tag entries shall be
retrieved. Has to be specified if \code{tag_names} is not used.}

\item{\code{start}}{Together with \code{end} defines a date range that is used
to filter tag entries. All tag entries overlapping with this date range
will be returned.}

\item{\code{end}}{Together with \code{start} defines a date range that is used
to filter tag entries. All tag entries overlapping with this date range
will be returned.}

\item{\code{start_date_begins}}{Together with \code{start_date_ends} defines a
date range for the start dates of the tag entries. Tag entries with a
start date within this date range will be returned.}

\item{\code{start_date_ends}}{Together with \code{start_date_begins} defines a
date range for the start dates of the tag entries. Tag entries with a
start date within this date range will be returned.}

\item{\code{end_date_begins}}{Together with \code{end_date_ends} defines a
date range for the end dates of the tag entries. Tag entries with an
end date within this date range will be returned.}

\item{\code{end_date_ends}}{Together with \code{end_date_begins} defines a
date range for the end dates of the tag entries. Tag entries with an
end date within this date range will be returned.}

\item{\code{is_end_date_set}}{Whether to return open or closed tag entries only.
If not specified or set to NULL all tag entries (closed and ongoing)
will be returned.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe containing the tag entries or a list of length zero
if no tag entries for the specified filter are available.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
tagEntries <- sp$tag_entries$load(tag_group_names = c("Info"))
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
