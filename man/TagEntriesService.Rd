% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TagEntriesService.R
\name{TagEntriesService}
\alias{TagEntriesService}
\title{TagEntriesService}
\description{
Provides access to functionality related to tag entries provided
through the web API.
}
\details{
A new instance of this class will be created by the ServiceProvider
automatically.
}
\examples{
\dontrun{
# create a new instance of the service provider
sp <- ServiceProvider$new("Host", 8095, "WorkspaceA", "UserX", "Password")

# get tag entries of group "Info"
tagEntries <- sp$tag_entries$GetTagEntries(
  TagEntriesFilter$new(TagGroup = "Info")
)

# delete tag entries
sp$tag_entries$DeleteTagEntry(
  entityName = "Well01",
  tagName = "Active",
  start = "2020-01-01T00:00:00.000Z"
)
}

## ------------------------------------------------
## Method `TagEntriesService$GetTagEnties`
## ------------------------------------------------

\dontrun{
sp <- ServiceProvider$new("192.168.0.123",
                          8095,
                          "workspace",
                          "user",
                          "password")
tagEntries <- sp$tag_entries$GetTagEntries(
  TagEntriesFilter$new(TagGroup = "Info"))
}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TagEntriesService-new}{\code{TagEntriesService$new()}}
\item \href{#method-TagEntriesService-AddOrEditTagEntry}{\code{TagEntriesService$AddOrEditTagEntry()}}
\item \href{#method-TagEntriesService-AddTagEntries}{\code{TagEntriesService$AddTagEntries()}}
\item \href{#method-TagEntriesService-DeleteTagEntries}{\code{TagEntriesService$DeleteTagEntries()}}
\item \href{#method-TagEntriesService-DeleteTagEntry}{\code{TagEntriesService$DeleteTagEntry()}}
\item \href{#method-TagEntriesService-GetTagEnties}{\code{TagEntriesService$GetTagEnties()}}
\item \href{#method-TagEntriesService-clone}{\code{TagEntriesService$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-new"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-new}{}}}
\subsection{Method \code{new()}}{
Create a new TagEntriesService instance. This is done by the
ServiceProvider automatically.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$new(url, tokenType, token)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{url}}{the URL for the API calls.}

\item{\code{tokenType}}{the type of the issued token.}

\item{\code{token}}{the issued token.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-AddOrEditTagEntry"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-AddOrEditTagEntry}{}}}
\subsection{Method \code{AddOrEditTagEntry()}}{
Add a new tag entry or update the end date of an existing
one.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$AddOrEditTagEntry(tagEntry)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tagEntry}}{The tag entry to add or update. Has to be an instance of
the class 'TagEntry'.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An instance of the class 'TagEntry' representing the added or
updated tag entry.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-AddTagEntries"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-AddTagEntries}{}}}
\subsection{Method \code{AddTagEntries()}}{
Add multiple new tag entries at once.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$AddTagEntries(entries, deleteExisting = c(TRUE, FALSE))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entries}}{A list of tag entries to add. The items of the list must
be instances of the class 'TagEntry'.}

\item{\code{deleteExisting}}{If this flag is set to \code{TRUE}, existing tag
entries in the specified new tag entries range are deleted prior to
inserting the new tag entries.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-DeleteTagEntries"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-DeleteTagEntries}{}}}
\subsection{Method \code{DeleteTagEntries()}}{
Delete all tag entries with a start date in the specified
time range.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$DeleteTagEntries(entityName, tagName, start, end = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entityName}}{The name of the entity for which to delete the tag
entries.}

\item{\code{tagName}}{The name of the tag for which to delete the tag entries.}

\item{\code{start}}{The start date of the range.}

\item{\code{end}}{(Optional) The end date of the range.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-DeleteTagEntry"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-DeleteTagEntry}{}}}
\subsection{Method \code{DeleteTagEntry()}}{
Delete the specified tag entry.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$DeleteTagEntry(entityName, tagName, start)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{entityName}}{The name of the tag entry's entity.}

\item{\code{tagName}}{The name of the tag entry's tag.}

\item{\code{start}}{The start date of the tag entry.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-GetTagEnties"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-GetTagEnties}{}}}
\subsection{Method \code{GetTagEnties()}}{
Get tag entries according to the given filter.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$GetTagEnties(tagEntriesFilter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tagEntriesFilter}}{The filter specifying which tag entries to
retrieve from the database.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A dataframe containing the tag entries.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
sp <- ServiceProvider$new("192.168.0.123",
                          8095,
                          "workspace",
                          "user",
                          "password")
tagEntries <- sp$tag_entries$GetTagEntries(
  TagEntriesFilter$new(TagGroup = "Info"))
}
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TagEntriesService-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TagEntriesService-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TagEntriesService$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
